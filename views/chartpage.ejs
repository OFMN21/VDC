<!doctype html>
<html Lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>add and remove data</title>

  <link rel="" href="/css/master.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
  <link rel="stylesheet" href="css/sidebar-menu.css">
  <link rel="stylesheet" href="css/homepage.css">
  <link rel="stylesheet" href="css/chartpage.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css">


</head>

<body>
  <main>
    <header class="p-3 text-bg-dark">
      <div class="container">
        <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
          <a href="#" class="d-block link-dark text-decoration-none "  aria-expanded="false">
            <img src="logo.png" alt="mdo" width="32" height="32" >
          </a>
          <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
          </ul>
          <div class="text-end">
            <a class="hide_UnderLine btn btn-outline-light me-2" href="/logout">Logout</a>
          </div>
        </div>
      </div>
    </header>
  </main>

  <div class="container text-center">
    <div class="row">
      <div class="col-3">

        <!-- ########### column #1 ############## -->
        <!-- ######### Sidebar ############# -->
        <!-- overflow: auto -->
        <ul style="margin-top: 67px;" class="sidebar-menu vertical-menu">
          <li class="sidebar-header">
            <h3 style="color:white; margin-left:30px">Datasets</h3>
          </li>
          <li>
            <div class="box" style="height: 475px; overflow: auto ">


              <select id="my-select" style="width:200px;margin: 15px;display:inline;" class="form-select" >
                <option selected>Select Chart type</option>
                <option value="bar">Bar Chart</option>
                <option value="line">Line Chart</option>
                <option value="pie">Pie Chart</option>
              </select>

            </div>
          </li>

        </ul>

      </div>
      <div class="col-9">
        <div class="chartBox">
          <canvas id="myChart"></canvas>

        </div>

        <div class="inputBox">
          <input type="number" class="form-control" style="width:200px; display:inline" id="inputdata">
          <input type="text" placeholder="Color" class="form-control" style="width:200px; display:inline" id="inputcolor">
          <input type="text" class="form-control" style="width:200px; display:inline" placeholder="label" id="inputlabel">
          <button onclick="updateChart()" id="insertdata" class="btn btn-outline-primary" style="margin-bottom:3px;">Add Data</button>
          <hr>
          <input type="number" class="form-control" style="width:200px; display:inline" id="filterdatanumber">
          <button onclick="filterChart()" class="btn btn-outline-primary" style="margin-bottom:3px;">Filter Chart</button>
          <button onclick="resetChart()" class="btn btn-outline-primary" style="margin-bottom:3px;">Reset Chart</button>


        </div>
        <button onclick="download()" class="btn btn-secondary" style="margin-top:150px; margin-right:900px">Download</button>


        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script type="">

        document.getElementById("my-select").addEventListener("change", changeChart);


          var label = <%- JSON.stringify(x)%>
          var data = [<%= y %>]
          const originalLabels = label;
          const originalData = data ;

          const ctx = document.getElementById('myChart').getContext('2d');
          const myChart = new Chart(ctx, {
            type: 'bar',
            data: {
              labels: originalLabels,
              datasets: [{
                label: '# of Votes',
                data: originalData,
                backgroundColor: [
                  'rgba(255, 99, 132, 0.2)',
                  'rgba(54, 162, 235, 0.2)',
                  'rgba(255, 206, 86, 0.2)',
                  'rgba(75, 192, 192, 0.2)',
                  'rgba(153, 102, 255, 0.2)',
                  'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                  'rgba(255, 99, 132, 1)',
                  'rgba(54, 162, 235, 1)',
                  'rgba(255, 206, 86, 1)',
                  'rgba(75, 192, 192, 1)',
                  'rgba(153, 102, 255, 1)',
                  'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
              }]
            },
            options: {
              scales: {
                y: {
                  beginAtZero: true
                }
              }
            }
          });

          function updateChart() {
            const inputdata = document.getElementById('inputdata');
            const inputcolor = document.getElementById('inputcolor');
            const inputlable = document.getElementById('inputlabel');
            myChart.data.datasets[0].data.push(inputdata.value);
            myChart.data.datasets[0].backgroundColor.push(inputcolor.value);
            myChart.data.datasets[0].borderColor.push(inputcolor.value);
            myChart.data.labels.push(inputlabel.value);

            myChart.update()

          }
          // function filterChart
          function filterChart() {
            myChart.data.datasets[0].data = originalData;
            myChart.data.labels = originalLabels;
            const filterdatanumber = document.getElementById('filterdatanumber').value;
            // filter array.filter command
            const filterData = myChart.data.datasets[0].data.filter(value => value >
              filterdatanumber);
            // create 2 new arrays for the labels + colors.
            const filterLabels = [];
            const filterColors = [];
            // for loop + loop through the array get the matching value index0f()
            let i = 0;
            for (i; i < filterData.length; i++) {
              const result = myChart.data.datasets[0].data.indexOf(filterData[i]);
              const labelresult = myChart.data.labels[result];
              const colorsresult = myChart.data.datasets[0].backgroundColor[result];
              //push this into the new array
              filterLabels.push(labelresult);
              filterColors.push(colorsresult);


            }
            // reassign the array into the chart.
            myChart.data.datasets[0].data = filterData;
            myChart.data.labels = filterLabels;
            myChart.data.datasets[0].backgroundColor = filterColors;

            // update chart
            myChart.update()
          }
          function resetChart() {
            myChart.data.datasets[0].data = originalData;
            myChart.data.labels = originalLabels;
            myChart.update();
          }


           function download(){
            const imageLink =  document.createElement('a');
            const canvas =  document.getElementById('myChart');
            imageLink.download = 'chart.png';
            imageLink.href =  canvas.toDataURL('image/png',1);
            imageLink.click();
          }


          function changeChart(){
            var value = this.value;
            console.log(value);
            switch (value) {
              case 'line':
                  const updatetype = 'line';
                  myChart.config.type = updatetype;
                  myChart.update();
                  break;
              case 'bar':
                  const updatetype2 = 'bar';
                  myChart.config.type = updatetype2;
                  myChart.update();
                  break;
              case 'pie':
                  const updatetype3 = 'pie';
                  myChart.config.type = updatetype3;
                  myChart.update();
                  break;
              default:
                console.log("wrong chart type");
            }
          };



        </script>
      </div>
    </div>
  </div>

</body>

</html>
